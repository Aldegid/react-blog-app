{"version":3,"sources":["components/blog-header/index.js","components/blog-header/blog-header.js","components/dummy/index.js","components/dummy/dummy.js","components/blog-post/blog-post.js","components/blog-post/index.js","components/loader/index.js","components/loader/loader.js","components/actions/index.js","components/blog-service-context/blog-service-context.js","components/hoc/with-blog-service.js","components/post-add-form/post-add-form.js","components/post-add-form/index.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/blog-posts-list/blog-posts-list.js","components/blog-posts-list/index.js","components/blog-post-details/blog-post-details.js","components/blog-post-details/index.js","components/login/index.js","components/login/login.js","components/app/index.js","components/app/App.js","reducers/index.js","store.js","index.js","services/blog-service.js"],"names":["BlogHeader","react_default","a","createElement","className","react_router_dom","to","Dummy","DeletePostButton","_ref","performPostDelete","onClick","BlogPost","withRouter","_ref2","title","body","id","history","isLoggedOn","blog_post_DeletePostButton","push","concat","Loader","fetchPosts","blogService","dispatch","type","getAllPosts","then","data","payload","catch","err","fetchPostDetails","getPost","React","createContext","BlogServiceProvider","Provider","BlogServiceConsumer","Consumer","withBlogService","Wrapped","props","Object","assign","PostAddForm","state","text","handleChange","target","currentTarget","name","_this","setState","defineProperty","value","handleSubmit","e","preventDefault","addPost","onSubmit","this","onChange","placeholder","Component","connect","bindActionCreators","ErrorIndicator","BlogPostsList","deletePost","_this2","_this$props","posts","isLoaded","error","components_error_indicator","Fragment","components_post_add_form","map","post","postPreview","length","substr","postTitle","components_blog_post","key","components_loader","BlogPostDetails","inputValue","onCommentAdd","postId","parseInt","addComment","onHandleChange","_this$props2","comments","comment","required","Login","loginButtonValue","performLog","App","components_blog_header","react_router","path","component","exact","render","match","params","components_blog_post_details","reducer","action","undefined","objectSpread","store","createStore","applyMiddleware","thunkMiddleware","_apiBase","_callee","res","regenerator_default","wrap","_context","prev","next","fetch","sent","ok","Error","statusText","json","abrupt","stop","_callee2","_context2","_callee3","_context3","method","headers","Content-Type","JSON","stringify","status","_callee4","_context4","_callee5","_context5","ReactDOM","es","app","document","getElementById"],"mappings":"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","file":"static/js/main.38fc94ac.chunk.js","sourcesContent":["import BlogHeader from './blog-header';\r\n\r\nexport default BlogHeader;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './blog-header.css';\r\n\r\nconst BlogHeader = () => {\r\n  return (\r\n    <header className='main__header'>\r\n      <Link to='/' className='logo'>\r\n        Cool Story Blog\r\n      </Link>\r\n      <div className='menu'>\r\n        <Link to='/'>Home</Link>\r\n        <Link to='/posts'>Posts</Link>\r\n        <Link to='/login'>Login</Link>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default BlogHeader;\r\n","import Dummy from './dummy';\r\n\r\nexport default Dummy;\r\n","import React from 'react';\r\nimport './dummy.css';\r\n\r\nconst Dummy = () => {\r\n  return (\r\n    <div className='dummy'>\r\n      <h1>Welcome to Cool Story Blog</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dummy;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport './blog-post.css';\r\n\r\nconst DeletePostButton = ({ performPostDelete }) => {\r\n  return (\r\n    <button\r\n      className='blog__button blog__button-del'\r\n      onClick={performPostDelete}\r\n    >\r\n      Delete Post\r\n    </button>\r\n  );\r\n};\r\n\r\nconst BlogPost = ({\r\n  title,\r\n  body,\r\n  id,\r\n  history,\r\n  performPostDelete,\r\n  isLoggedOn\r\n}) => {\r\n  return (\r\n    <div className='blog__item'>\r\n      <h2 className='blog__item-header'>{title}</h2>\r\n      <p className='blog__item-content'>{body}</p>\r\n      <div className='btn-group'>\r\n        {isLoggedOn ? (\r\n          <DeletePostButton performPostDelete={performPostDelete} />\r\n        ) : null}\r\n\r\n        <button\r\n          className='blog__button'\r\n          onClick={() => history.push(`/posts/${id}`)}\r\n        >\r\n          Read More\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(BlogPost);\r\n","import BlogPost from './blog-post';\r\n\r\nexport default BlogPost;\r\n","import Loader from './loader';\n\nexport default Loader;\n","import React from 'react';\n\nimport './loader.css';\n\nconst Loader = () => {\n  return (\n    <div className='lds-roller'>\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n};\n\nexport default Loader;\n","const postsRequested = () => {\r\n  return {\r\n    type: 'FETCH_POSTS_REQUEST'\r\n  };\r\n};\r\n\r\nconst postsLoaded = posts => {\r\n  return {\r\n    type: 'FETCH_POSTS_SUCCESS',\r\n    payload: posts\r\n  };\r\n};\r\n\r\nconst postsError = error => {\r\n  return {\r\n    type: 'FETCH_POSTS_FAILURE',\r\n    payload: error\r\n  };\r\n};\r\n\r\nconst postDetailsRequested = () => {\r\n  return {\r\n    type: 'FETCH_POST_DETAILS_REQUEST'\r\n  };\r\n};\r\n\r\nconst postDetailsLoaded = post => {\r\n  return {\r\n    type: 'FETCH_POST_DETAILS_SUCCESS',\r\n    payload: post\r\n  };\r\n};\r\n\r\nconst postDetailsError = error => {\r\n  return {\r\n    type: 'FETCH_POST_DETAILS_FAILURE',\r\n    payload: error\r\n  };\r\n};\r\n\r\nexport const postClicked = postId => {\r\n  return {\r\n    type: 'FETCH_POST_SUCCESS',\r\n    payload: postId\r\n  };\r\n};\r\n\r\nexport const performLogin = () => {\r\n  return {\r\n    type: 'PERFORM_LOGIN'\r\n  };\r\n};\r\n\r\nexport const fetchPosts = blogService => () => dispatch => {\r\n  dispatch(postsRequested());\r\n  blogService\r\n    .getAllPosts()\r\n    .then(data => dispatch(postsLoaded(data)))\r\n    .catch(err => dispatch(postsError(err)));\r\n};\r\n\r\nexport const fetchPostDetails = blogService => id => dispatch => {\r\n  dispatch(postDetailsRequested());\r\n  blogService\r\n    .getPost(id)\r\n    .then(data => dispatch(postDetailsLoaded(data)))\r\n    .catch(err => dispatch(postDetailsError(err)));\r\n};\r\n","import React from 'react';\r\n\r\nconst {\r\n  Provider: BlogServiceProvider,\r\n  Consumer: BlogServiceConsumer\r\n} = React.createContext();\r\n\r\nexport { BlogServiceProvider, BlogServiceConsumer };\r\n","import React from 'react';\r\n\r\nimport { BlogServiceConsumer } from '../blog-service-context';\r\n\r\nconst withBlogService = () => Wrapped => {\r\n  return props => {\r\n    return (\r\n      <BlogServiceConsumer>\r\n        {blogService => {\r\n          return <Wrapped {...props} blogService={blogService} />;\r\n        }}\r\n      </BlogServiceConsumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withBlogService;\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchPosts } from '../actions';\r\nimport { withBlogService } from '../hoc';\r\n\r\nimport './post-add-form.css';\r\n\r\nclass PostAddForm extends Component {\r\n  state = {\r\n    title: '',\r\n    text: ''\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const currentTarget = target.name === 'postadd' ? 'text' : 'title';\r\n    this.setState({\r\n      [currentTarget]: target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.blogService\r\n      .addPost(this.state.title, this.state.text)\r\n      .then(data => (data ? this.props.fetchPosts() : null));\r\n    this.setState({\r\n      title: '',\r\n      text: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className='post__add'>\r\n        <input\r\n          type='text'\r\n          onChange={this.handleChange}\r\n          value={this.state.title}\r\n          className='post_add-title post_add-item'\r\n          placeholder='post title...'\r\n        />\r\n        <textarea\r\n          name='postadd'\r\n          onChange={this.handleChange}\r\n          value={this.state.text}\r\n          className='post_add-textarea'\r\n          placeholder='type you text here'\r\n        />\r\n        <button className='post_add-button post_add-item'>Add new post</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = () => props => {\r\n  return props;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { blogService }) => {\r\n  return bindActionCreators(\r\n    {\r\n      fetchPosts: fetchPosts(blogService)\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default withBlogService()(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(PostAddForm)\r\n);\r\n","import PostAddForm from './post-add-form';\r\n\r\nexport default PostAddForm;\r\n","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;\r\n","import React from 'react';\r\n\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className='error__container'>\r\n      <h2>Oops, something went wrong :(</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import React, { Component } from 'react';\r\nimport BlogPost from '../blog-post';\r\nimport Loader from '../loader';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchPosts } from '../actions';\r\nimport { withBlogService } from '../hoc';\r\nimport PostAddForm from '../post-add-form';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nimport './blog-posts-list.css';\r\n\r\nclass BlogPostsList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchPosts();\r\n  }\r\n\r\n  performPostDelete = id => {\r\n    this.props.blogService\r\n      .deletePost(id)\r\n      .then(data => (data ? this.props.fetchPosts() : null));\r\n  };\r\n\r\n  render() {\r\n    const { posts, isLoaded, isLoggedOn, error } = this.props;\r\n    if (!isLoaded) {\r\n      return <Loader />;\r\n    }\r\n    if (error) {\r\n      return <ErrorIndicator />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <PostAddForm />\r\n        <div className='blog__container'>\r\n          {posts.map(post => {\r\n            const { body, title, id } = post;\r\n            const postPreview =\r\n              post.body.length > 150 ? `${body.substr(0, 120)} ...` : body;\r\n            const postTitle =\r\n              title.length > 40 ? `${title.substr(0, 40)} ...` : title;\r\n\r\n            return (\r\n              <BlogPost\r\n                key={id}\r\n                title={postTitle}\r\n                body={postPreview}\r\n                id={id}\r\n                performPostDelete={() => this.performPostDelete(id)}\r\n                isLoggedOn={isLoggedOn}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => props => {\r\n  return props;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { blogService }) => {\r\n  return bindActionCreators(\r\n    {\r\n      fetchPosts: fetchPosts(blogService)\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default withBlogService()(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(BlogPostsList)\r\n);\r\n","import BlogPostsList from './blog-posts-list';\r\n\r\nexport default BlogPostsList;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withBlogService } from '../hoc';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchPostDetails } from '../actions';\r\nimport Loader from '../loader';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nimport './blog-post-details.css';\r\n\r\nclass BlogPostDetails extends Component {\r\n  state = {\r\n    inputValue: ''\r\n  };\r\n\r\n  onCommentAdd = e => {\r\n    e.preventDefault();\r\n    const { id, fetchPostDetails } = this.props;\r\n\r\n    const postId = parseInt(id);\r\n\r\n    this.props.blogService\r\n      .addComment(postId, this.state.value)\r\n      .then(data => (data ? fetchPostDetails(id) : null));\r\n    this.setState({ value: '' });\r\n  };\r\n\r\n  onHandleChange = ({ target }) => {\r\n    this.setState({ value: target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchPostDetails(this.props.id);\r\n  }\r\n\r\n  render() {\r\n    const { post, error } = this.props;\r\n\r\n    if (!post) {\r\n      return <Loader />;\r\n    }\r\n\r\n    if (error) {\r\n      return <ErrorIndicator />;\r\n    }\r\n    return (\r\n      <div className='post__details'>\r\n        <h2 className='post__details-header'>{post.title}</h2>\r\n        <p className='post__details-content'>{post.body}</p>\r\n        <h3>Comments:</h3>\r\n        <ul className='post__details-list'>\r\n          {post.comments.map(comment => (\r\n            <li className='post__details-item' key={comment.id}>\r\n              {comment.body}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <form onSubmit={this.onCommentAdd}>\r\n          <textarea\r\n            name='comment'\r\n            id='comment'\r\n            value={this.state.value}\r\n            onChange={this.onHandleChange}\r\n            className='post__details-textarea'\r\n            required\r\n          />\r\n          <button className='post__details-button'>Add Comment</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return state;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { blogService }) => {\r\n  return bindActionCreators(\r\n    {\r\n      fetchPostDetails: fetchPostDetails(blogService)\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default withBlogService()(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(BlogPostDetails)\r\n);\r\n","import BlogPostDetails from './blog-post-details';\r\n\r\nexport default BlogPostDetails;\r\n","import Login from './login';\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { performLogin } from '../actions';\r\n\r\nimport './login.css';\r\n\r\nconst Login = ({ loginButtonValue, performLog }) => {\r\n  return (\r\n    <div className='login'>\r\n      <h2>Please log in to be able to delete posts.</h2>\r\n      <button type='button' className='login__button' onClick={performLog}>\r\n        {loginButtonValue}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ loginButtonValue }) => {\r\n  return {\r\n    loginButtonValue\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    performLog: () => dispatch(performLogin())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\n\nimport BlogHeader from '../blog-header';\nimport Dummy from '../dummy';\nimport BlogPostsList from '../blog-posts-list';\nimport BlogPostDetails from '../blog-post-details';\nimport Login from '../login';\n\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='container'>\n        <BlogHeader />\n        <Switch>\n          <Route path='/' component={Dummy} exact />\n          <Route path='/posts' component={BlogPostsList} exact />\n          <Route path='/login' component={Login} />\n          <Route\n            path='/posts/:id'\n            render={({ match }) => {\n              const { id } = match.params;\n              return <BlogPostDetails id={id} />;\n            }}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reducer = (state, action) => {\r\n  if (state === undefined) {\r\n    return {\r\n      posts: [],\r\n      post: null,\r\n      isLoaded: false,\r\n      error: false,\r\n      isLoggedOn: false,\r\n      loginButtonValue: 'Login'\r\n    };\r\n  }\r\n\r\n  switch (action.type) {\r\n    case 'FETCH_POSTS_REQUEST':\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case 'FETCH_POSTS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        isLoaded: true,\r\n        error: false\r\n      };\r\n    case 'FETCH_POSTS_ERROR':\r\n      return {\r\n        ...state,\r\n        posts: [],\r\n        isLoaded: false,\r\n        error: true\r\n      };\r\n\r\n    case 'FETCH_POST_DETAILS_REQUEST':\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case 'FETCH_POST_DETAILS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoaded: true,\r\n        post: action.payload\r\n      };\r\n\r\n    case 'FETCH_POST_DETAILS_FAILURE':\r\n      return {\r\n        ...state,\r\n        post: null,\r\n        error: true\r\n      };\r\n\r\n    case 'PERFORM_LOGIN':\r\n      return {\r\n        ...state,\r\n        isLoggedOn: (state.isLoggedOn = !state.isLoggedOn),\r\n        loginButtonValue:\r\n          state.loginButtonValue === 'Login' ? 'Logout' : 'Login'\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './components/app';\nimport store from './store';\n\nimport { BlogServiceProvider } from './components/blog-service-context';\n\nimport BlogService from './services/blog-service';\nconst blogService = new BlogService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BlogServiceProvider value={blogService}>\n      <Router>\n        <App />\n      </Router>\n    </BlogServiceProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n","export default class BlogService {\n  _apiBase = 'https://simple-blog-api.crew.red';\n\n  getAllPosts = async () => {\n    const res = await fetch(`${this._apiBase}/posts`);\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return await res.json();\n  };\n\n  getPost = async id => {\n    const res = await fetch(`${this._apiBase}/posts/${id}?_embed=comments`);\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return await res.json();\n  };\n\n  addComment = async (id, text) => {\n    const res = await fetch(`${this._apiBase}/comments`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        postId: id,\n        body: text\n      })\n    });\n    if (res.status !== 201) {\n      throw new Error(res.statusText);\n    }\n    return await res.json();\n  };\n\n  addPost = async (title, body) => {\n    const res = await fetch(`${this._apiBase}/posts`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        title,\n        body\n      })\n    });\n    if (res.status !== 201) {\n      throw new Error(res.statusText);\n    }\n    return await res.json();\n  };\n\n  deletePost = async postId => {\n    const res = await fetch(`${this._apiBase}/posts/${postId}`, {\n      method: 'DELETE'\n    });\n    if (res.status !== 200) {\n      throw new Error(res.statusText);\n    }\n\n    return await res.json;\n  };\n}\n"],"sourceRoot":""}